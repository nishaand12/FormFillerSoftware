name: Build macOS DMGs (Manual)

# This workflow only runs when you manually trigger it
on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number (optional, will use VERSION file if not provided)'
        required: false
        type: string

jobs:
  build-intel:
    name: Build Intel (x86_64) DMG
    runs-on: macos-13  # Intel Mac
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Build Intel DMG
        run: python build_mac.py
      
      - name: Get version
        id: get_version
        run: |
          if [ -n "${{ github.event.inputs.version }}" ]; then
            VERSION="${{ github.event.inputs.version }}"
          else
            VERSION=$(cat VERSION)
          fi
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
      
      - name: Rename DMG for Intel
        run: |
          VERSION="${{ steps.get_version.outputs.VERSION }}"
          mv PhysioClinicAssistant-${VERSION}-macOS.dmg \
             PhysioClinicAssistant-${VERSION}-macOS-Intel.dmg
      
      - name: Upload Intel DMG as artifact
        uses: actions/upload-artifact@v4
        with:
          name: intel-dmg
          path: PhysioClinicAssistant-*-macOS-Intel.dmg
          retention-days: 30  # Keep for 30 days

  build-apple-silicon:
    name: Build Apple Silicon (arm64) DMG
    runs-on: macos-14  # Apple Silicon Mac (M1)
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      
      - name: Set up Python 3.13
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'
      
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      
      - name: Build Apple Silicon DMG
        run: python build_mac.py
      
      - name: Get version
        id: get_version
        run: |
          if [ -n "${{ github.event.inputs.version }}" ]; then
            VERSION="${{ github.event.inputs.version }}"
          else
            VERSION=$(cat VERSION)
          fi
          echo "VERSION=$VERSION" >> $GITHUB_OUTPUT
      
      - name: Rename DMG for Apple Silicon
        run: |
          VERSION="${{ steps.get_version.outputs.VERSION }}"
          mv PhysioClinicAssistant-${VERSION}-macOS.dmg \
             PhysioClinicAssistant-${VERSION}-macOS-AppleSilicon.dmg
      
      - name: Upload Apple Silicon DMG as artifact
        uses: actions/upload-artifact@v4
        with:
          name: apple-silicon-dmg
          path: PhysioClinicAssistant-*-macOS-AppleSilicon.dmg
          retention-days: 30  # Keep for 30 days

  # Summary job to show download links
  summary:
    name: Build Summary
    needs: [build-intel, build-apple-silicon]
    runs-on: ubuntu-latest
    
    steps:
      - name: Create summary
        run: |
          echo "## âœ… Build Complete!" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "Both DMG files have been built successfully." >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### ðŸ“¥ Download Artifacts" >> $GITHUB_STEP_SUMMARY
          echo "Go to the workflow run page and download:" >> $GITHUB_STEP_SUMMARY
          echo "- **intel-dmg** - For Intel Macs (x86_64)" >> $GITHUB_STEP_SUMMARY
          echo "- **apple-silicon-dmg** - For Apple Silicon Macs (M1/M2/M3)" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "### Next Steps" >> $GITHUB_STEP_SUMMARY
          echo "1. Download both artifact ZIP files" >> $GITHUB_STEP_SUMMARY
          echo "2. Extract the DMG files" >> $GITHUB_STEP_SUMMARY
          echo "3. Test them locally" >> $GITHUB_STEP_SUMMARY
          echo "4. Create a GitHub Release and upload both DMGs" >> $GITHUB_STEP_SUMMARY

